<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on sangeet259</title>
    <link>https://sangeet259.github.io/categories/blog/</link>
    <description>Recent content in Blog on sangeet259</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://sangeet259.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Evolve from source</title>
      <link>https://sangeet259.github.io/posts/evolve-from-source/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/evolve-from-source/</guid>
      <description>I was working on Evolve. I made some changes to it&amp;rsquo;s codebase, at this point it becomes very important to me to see the effect of the changes that I make, because unlike others who just trust their code and directly run tests on the code.
I don&amp;rsquo;t run tests unless I see the working of the code I write.
Doing this for Mercurial repo was easier, I didn&amp;rsquo;t have to do much.</description>
    </item>
    
    <item>
      <title>GSoC Final Post</title>
      <link>https://sangeet259.github.io/posts/gcoc-final-post/</link>
      <pubDate>Sun, 12 Aug 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-final-post/</guid>
      <description>HG Grep | The Google Summer of Code Project Mercurial | Python Software Foundation Mentors : Yuya Nishihara, Pulkit Goyal, Jordi GH, Kevin Bullock, Sean Farley
I did my project under Python Software Foundation and Mercurial. My project in the GSoC’18 dealt with the grepping aspect of Mecurial
Now, before diving into it, making some things clear from the title.
What is Google Summer of Code ? 
Google Summer of Code is program to promote open-source development.</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 7</title>
      <link>https://sangeet259.github.io/posts/gcoc-post-7/</link>
      <pubDate>Wed, 08 Aug 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-post-7/</guid>
      <description>GSoC Blog post #7 This week I worked on passing multiple revisions to the –allfiles flag.
The PR can be found at https://phab.mercurial-scm.org/D3976
It’s assumed that if you are passing multiple revisions to –allfiles, you want hits from all of them. This was the behaviour that was chose after a discussion with Yuya.
The initial patch that I had sent had a different behaviour.
It made sure it just check the files only once by maintaining a dictionary called files.</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 6</title>
      <link>https://sangeet259.github.io/posts/gcoc-post-6/</link>
      <pubDate>Tue, 24 Jul 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-post-6/</guid>
      <description>GSoC Blog post #6 At the beginning of this week, my previous commit was revert and set to config = False, meaning that it is hidden behind that config option. That’s because it was a period of code freeze in mercurial as the next release is due in some days, so unless a feature is completely tested it can’t be released.
Link to the revision: https://phab.mercurial-scm.org/D3919
Next Yuya told me to work on passing multiple revisions with –all-files mode.</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 5</title>
      <link>https://sangeet259.github.io/posts/gcoc-post-5/</link>
      <pubDate>Mon, 09 Jul 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-post-5/</guid>
      <description>GSOC Blog Post #5 This time I was working on changing the default of the grep command to a new behaviour.
With this patch grep searches on the working directory by default and looks for all files tracked by the working directory and greps on them
==========================Demonstration================
OLD BEHAVIOUR
$ hg init a $ cd a $ echo &amp;#34;some text&amp;#34;&amp;gt;&amp;gt;file1 $ hg add file1 $ hg commit -m &amp;#34;adds file1&amp;#34; $ hg mv file1 file2 $ hg grep &amp;#34;some&amp;#34; file2:1:some text file1:0:some text This behaviour is undesirable since file1 is not in the current history and was renamed as file2, so the second result was redundant and confusing</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 4</title>
      <link>https://sangeet259.github.io/posts/gcoc-post-4/</link>
      <pubDate>Wed, 27 Jun 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-post-4/</guid>
      <description>GSoC Blog Post #4 Another Fortnight gone by, and perhaps this was the time when we got most work done.
This time around I added two new features to mercurial.
They are: The allfiles mode
This would work on a single revision and get all the files that were there in that revision. So it’s like grepping on a previous state. Using this with wdir() :: hg grep -r &amp;ldquo;wdir()&amp;rdquo; &amp;ndash;allfiles is what the default behaviour is desired for grep.</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 3</title>
      <link>https://sangeet259.github.io/posts/gcoc-post-3/</link>
      <pubDate>Mon, 11 Jun 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gcoc-post-3/</guid>
      <description>GSoC Blog Post 3 These two weeks I was involved in fixing the –wdir(). Yuya had asked me to not create an entire separate if/else block as that might lead to untested code paths.
So I was trying to work out another way. While I was trying to figure out a way to do this I realised the code had changed a bit since my last patch, and it nows throws WdirUnsupported exception.</description>
    </item>
    
    <item>
      <title>GSoC Blog Post 2</title>
      <link>https://sangeet259.github.io/posts/gsoc-post-2/</link>
      <pubDate>Mon, 28 May 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gsoc-post-2/</guid>
      <description>So it is two weeks into the coding period and I thankfully haven’t fallen much behind my own set timeline.
The tasks that I had set this week were fixing the&amp;ndash;all flag and fix the working directory grep. Thankfully I had done major of this work during/after submission. The fix of the &amp;ndash;all was tested and merged and is a part of the stable version of hg now.
The best part of the issue was that fixing it took just changing two lines.</description>
    </item>
    
    <item>
      <title>Demonstrating the problem with forward ordered grep --all</title>
      <link>https://sangeet259.github.io/posts/mercurial-grep-all-issue/</link>
      <pubDate>Sun, 13 May 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/mercurial-grep-all-issue/</guid>
      <description>Demonstrating the problem with forward ordered grep --all So if you do a hg grep &amp;quot;pattern&amp;quot; --all, you would get all the lines along with revision numbers showing when this pattern appeared or disappeared from the repository. Cool, that’s what we want.
And by default, it does a reverse revlog search. That is, it starts from the latest revision and goes all the way upto the oldest one. And accordingly shows you the result.</description>
    </item>
    
    <item>
      <title>Proposal acceptance and community bonding period</title>
      <link>https://sangeet259.github.io/posts/gsoc-proposal-acceptance/</link>
      <pubDate>Sun, 13 May 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/gsoc-proposal-acceptance/</guid>
      <description>Proposal acceptance and community bonding period Two weeks into the summer break and the gsoc coding period is about to begin.  It all started in February when I started looking for organisations to contribute for the Google Summer of Code 2018. I knew the language was going to be Python, so straight I was into the PSF Sub Orgs. The next challenge was to select the sub org, I thought of going for core software development and not some specialised field.</description>
    </item>
    
    <item>
      <title>Custom Bash</title>
      <link>https://sangeet259.github.io/posts/custom-bash-config/</link>
      <pubDate>Fri, 26 Jan 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/custom-bash-config/</guid>
      <description>Every time I re-install Ubnutu I have to search the web for the custom shell and git promp configurations. They are really handy for git completions.
  This time I thought to just put it down here.
Steps :
 Download : git-prompt.sh Save the above file as git-prompt.sh in the home directory Download : git-completion.bash Save the above file as git-completion.bash in the home directory Now open .bashrc file in any text editor and these lines at the end</description>
    </item>
    
    <item>
      <title>Matplotlib Backened change during Training a DL Model</title>
      <link>https://sangeet259.github.io/posts/matplotlib-backend-dl-training/</link>
      <pubDate>Sun, 07 Jan 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/matplotlib-backend-dl-training/</guid>
      <description>Matplotlib Backened change during Training a DL Model If you are training something on remote server where you dont have root access and get an error like your python is not configured for tkinter. This is nothing but maybe somewhere in your pipe
Then you&amp;rsquo;re options are :
 First install tkinter, note that since you do not have sudo priviledge, you have to install tcl8.6-dev and tk8.6-dev from source too.</description>
    </item>
    
    <item>
      <title>Being Pythonic</title>
      <link>https://sangeet259.github.io/posts/being-pythonic/</link>
      <pubDate>Thu, 07 Dec 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/being-pythonic/</guid>
      <description>I had encountered several times words like map, zip, lambda, *args, **kwargs. This time I decided to look up the web and really get the hang of them. So here I was searching the net. Finally I came across some nice explaations which I pen down here :
 Map, Zip and Lamda :: https://bradmontgomery.net/blog/pythons-zip-map-and-lambda/ **Args and **Kwargs :: https://pythontips.com/2013/08/04/args-and-kwargs-in-python-explained/  </description>
    </item>
    
    <item>
      <title>Setting Up OpenCV</title>
      <link>https://sangeet259.github.io/posts/opencv-setup/</link>
      <pubDate>Thu, 07 Dec 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/opencv-setup/</guid>
      <description>I was trying to use the Tensorflow&amp;rsquo;s newly released Object Detection API on my webcam. I realised I couldn&amp;rsquo;t open webcam, OpenCV which was bundled with ROS was throwing all sorts of errors, I Googled and tried many hacky solution but all in vain.
Now that my end sems were over I decided to install it fresh.
This site : https://www.learnopencv.com/install-opencv3-on-ubuntu/ is a great walktrough through the installation process. It&amp;rsquo;s absolutely complete.</description>
    </item>
    
    <item>
      <title>Obligatory Hello World post</title>
      <link>https://sangeet259.github.io/posts/first-jekyll-post/</link>
      <pubDate>Tue, 14 Nov 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/first-jekyll-post/</guid>
      <description>Hellooo World !
 Okay So it&amp;rsquo;s already noon and I am setting up up my portfolio. While I already had a portfolio built in the summer as part of the SF Web Team Selections , but that one looked very childish and lacked professionalism. I was still sticking around with it until I saw Himanshu Mishra&amp;rsquo;s and Dibya Das&amp;rsquo;s portfolio . I was amazed that how simplistic these guys had made their portfolio.</description>
    </item>
    
    <item>
      <title>Setting Up CUDA</title>
      <link>https://sangeet259.github.io/posts/cuda-setup/</link>
      <pubDate>Tue, 14 Nov 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/cuda-setup/</guid>
      <description>CUDA Set Up The last time I tried to fiddle with CUDA I got stuck in a login loop and had to reinstall Ubuntu. Last day again I was sitting in front of a fresh installation of Ubuntu and nightmares of last time&amp;rsquo;s Tensorflow GPU setup were all but moments away.
Anyway I had to do it.
But surprisingly this time it was short and simple ( simpler would hae been a better choice ).</description>
    </item>
    
  </channel>
</rss>