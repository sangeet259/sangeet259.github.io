<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on sangeet259</title>
    <link>https://sangeet259.github.io/tags/devops/</link>
    <description>Recent content in Devops on sangeet259</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://sangeet259.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Evolve from source</title>
      <link>https://sangeet259.github.io/posts/evolve-from-source/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/evolve-from-source/</guid>
      <description>I was working on Evolve. I made some changes to it&amp;rsquo;s codebase, at this point it becomes very important to me to see the effect of the changes that I make, because unlike others who just trust their code and directly run tests on the code.
I don&amp;rsquo;t run tests unless I see the working of the code I write.
Doing this for Mercurial repo was easier, I didn&amp;rsquo;t have to do much.</description>
    </item>
    
    <item>
      <title>HTTP in HTTPS proxy</title>
      <link>https://sangeet259.github.io/til/http-in-https/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/til/http-in-https/</guid>
      <description>Whenever I set an https_proxy, I am tempted to do something like :
https_proxy=https://172.16.2.30:8080/
Notice the &amp;ldquo;https://&amp;rdquo; , sadly that&amp;rsquo;s not how it works, you have to set it &amp;ldquo;http://&amp;rdquo; only.
I have previously been caught in problems due to this. The latest one was when I used the https:// in the docker proxy configuration.
Thankfully this stackoverflow answer saved the day : https://stackoverflow.com/a/51648635/6507303</description>
    </item>
    
    <item>
      <title>XClip in Fish Shell</title>
      <link>https://sangeet259.github.io/til/xclip-in-fish/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/til/xclip-in-fish/</guid>
      <description>Wondered if you could just copy the output of a bash command to clipboard and paste it somewhere.
XClip is here for your rescue. The Fish Shell 3.0 now supports xclip.
How to use :
 For copying  $pwd | xclip  Paste it  $cd (xclip -o)   PS: In fish to execute a string as a command use paranthesis &amp;quot;( )&amp;quot; instead of backticks &amp;ldquo; ` ` &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Custom Bash</title>
      <link>https://sangeet259.github.io/posts/custom-bash-config/</link>
      <pubDate>Fri, 26 Jan 2018 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/custom-bash-config/</guid>
      <description>Every time I re-install Ubnutu I have to search the web for the custom shell and git promp configurations. They are really handy for git completions.
  This time I thought to just put it down here.
Steps :
 Download : git-prompt.sh Save the above file as git-prompt.sh in the home directory Download : git-completion.bash Save the above file as git-completion.bash in the home directory Now open .bashrc file in any text editor and these lines at the end</description>
    </item>
    
    <item>
      <title>Setting Up OpenCV</title>
      <link>https://sangeet259.github.io/posts/opencv-setup/</link>
      <pubDate>Thu, 07 Dec 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/opencv-setup/</guid>
      <description>I was trying to use the Tensorflow&amp;rsquo;s newly released Object Detection API on my webcam. I realised I couldn&amp;rsquo;t open webcam, OpenCV which was bundled with ROS was throwing all sorts of errors, I Googled and tried many hacky solution but all in vain.
Now that my end sems were over I decided to install it fresh.
This site : https://www.learnopencv.com/install-opencv3-on-ubuntu/ is a great walktrough through the installation process. It&amp;rsquo;s absolutely complete.</description>
    </item>
    
    <item>
      <title>Setting Up CUDA</title>
      <link>https://sangeet259.github.io/posts/cuda-setup/</link>
      <pubDate>Tue, 14 Nov 2017 19:03:31 +0530</pubDate>
      
      <guid>https://sangeet259.github.io/posts/cuda-setup/</guid>
      <description>CUDA Set Up The last time I tried to fiddle with CUDA I got stuck in a login loop and had to reinstall Ubuntu. Last day again I was sitting in front of a fresh installation of Ubuntu and nightmares of last time&amp;rsquo;s Tensorflow GPU setup were all but moments away.
Anyway I had to do it.
But surprisingly this time it was short and simple ( simpler would hae been a better choice ).</description>
    </item>
    
  </channel>
</rss>